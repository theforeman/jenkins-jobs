#!/bin/bash
set -xe

echo "--Setting Up Sources"

# Create the package - assumes new gem2deb is in the packaging repo
cd dependencies/${os}
mkdir build-${project}
cd build-${project}

BUILD_TYPE=gem
# Import variables from the project, allowing it to override behaviour
if [ -e ../${project}/build_vars.sh ]; then
  . ../${project}/build_vars.sh
fi

# Figure out package version and get it
VERSION=$(head -n1 ../${project}/changelog|awk '{print $2}'|sed 's/(//;s/)//'|cut -f1 -d-|cut -d: -f2)
if [[ $BUILD_TYPE == "python" ]]; then
  pip download --no-deps --no-binary=:all: "${project}==${VERSION}"
  mkdir "${project}-${VERSION}"
  tar -x -C "${project}-${VERSION}" --strip-components=1 -f "${project}-${VERSION}.tar.gz"
  mv "${project}-${VERSION}.tar.gz" "${project}_${VERSION}.orig.tar.gz"
  cp -r ../${project} "${project}-${VERSION}/debian"
elif [[ $BUILD_TYPE == "gem" ]]; then
  gem fetch ${project} -v "=${VERSION}"
  ../../gem2deb ${project}-${VERSION}.gem --debian-subdir ../${project} --only-source-dir
else
  echo "Unsupported build type: ${BUILD_TYPE}"
  exit 1
fi

# Should only be one dir generated by gem2deb
DIR=$(find -maxdepth 1 -type d -not -name '.')
echo $DIR
cd $DIR

# Add changelog entry if this is a git build
if [ x$gitrelease = xtrue ]; then
  PACKAGE_NAME=$(head -n1 debian/changelog|awk '{print $1}')
  LAST_COMMIT=$(git rev-list HEAD|/usr/bin/head -n 1)
  DATE=$(date -R)
  RELEASE="${VERSION}-${os}+scratchbuild${BUILD_TIMESTAMP}"
  MAINTAINER="${repoowner} <no-reply@theforeman.org>>"
  mv debian/changelog debian/changelog.tmp
  echo "$PACKAGE_NAME ($RELEASE) UNRELEASED; urgency=low

  * Automatically built package based on the state of
    foreman-packaging at commit $LAST_COMMIT

 -- $MAINTAINER  $DATE
" > debian/changelog

  cat debian/changelog.tmp >> debian/changelog
  rm -f debian/changelog.tmp
fi
