---
- hosts: localhost
  tasks:
    - name: 'Get a new node'
      cico:
        action: get
        retry_count: 5
      register: cico_get_data
      retries: 2
      delay: 310
      until: cico_get_data.ansible_module_results is defined

    - name: 'Fail if no SSID returned'
      fail:
        msg: 'No SSID returned from ci.centos.org when getting new node'
      when: not cico_get_data.ansible_module_results.ssid

    - name: 'Retry geting list of nodes'
      cico:
        action: list
        ssid: "{{ cico_get_data.ansible_module_results.ssid }}"
      register: cico_data
      retries: 5
      delay: 5
      until: cico_data.ansible_module_results.hosts|length == 1

    - debug:
        msg: "{{ cico_data }}"

    - name: 'Fail if no hosts returned'
      fail:
        msg: 'Could not get hosts from ci.centos.org'
      when: cico_data.ansible_module_results.hosts|length == 0

    - name: 'Write cico data locally'
      copy:
        content: "{{ cico_data.ansible_module_results | combine({'ssid': cico_get_data.ansible_module_results.ssid}) | to_json }}"
        dest: "{{ playbook_dir }}/cico_data.json"

    - name: 'Write cico inventory'
      copy:
        content: |
          {% for host, value in cico_data.ansible_module_results.hosts.items() %}
          {{ value.hostname }} ansible_fqdn={{ value.hostname }} ansible_user=root ansible_host={{ value.ip_address }}
          {% endfor %}
        dest: "{{ playbook_dir }}/cico_inventory"

    - name: 'Fetch default ssh_config'
      slurp:
        src: /etc/ssh/ssh_config
      register: etc_ssh_config

    - name: 'Write cico ssh config file'
      template:
        src: templates/ssh_config.j2
        dest: "{{ playbook_dir }}/ssh_config"
      vars:
        ssh_config_base: "{{ etc_ssh_config['content'] | b64decode }}"
